<?xml version="1.0" encoding="UTF-8"?>
<!-- software.xsd -->
<!-- generated: 10 December 2008 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gml="http://www.opengis.net/gml">
	<xs:include schemaLocation="../cim.xsd"/>
	<xs:include schemaLocation="../activity/activity.xsd"/>
	<xs:include schemaLocation="../data/data.xsd"/>
	<xs:include schemaLocation="../grids/grids.xsd"/>
	<xs:include schemaLocation="../quality/quality.xsd"/>
	<xs:include schemaLocation="../shared/shared.xsd"/>
	<xs:complexType name="PropertyGroup">
		<xs:sequence>
			<xs:element name="group" type="PropertyGroup" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="parentGroup" type="PropertyGroup" minOccurs="0"/>
			<xs:element name="property" type="ModelProperty" maxOccurs="unbounded"/>
			<xs:element name="component" type="SoftwareComponent"/>
			<xs:element name="id" type="UniqueIdentifier" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="CodeList" use="optional"/>
	</xs:complexType>
	<xs:complexType name="Compiler">
		<xs:annotation>
			<xs:documentation>Gives information about the compiler referenced by the TechnicalProperties of a ModelComponent.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="compilerEnvironmentVariables" type="xs:string">
				<xs:annotation>
					<xs:documentation>Any environment variables used by the compiler.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="compilerLanguage" type="xs:string">
				<xs:annotation>
					<xs:documentation>The programming language being compiled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="compilerLibrary" type="xs:string"/>
			<xs:element name="compilerName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the compiler.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="compilerOptimisation" type="xs:string">
				<xs:annotation>
					<xs:documentation>Any optimisation flags used with the compiler.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="compilerVersion" type="xs:string">
				<xs:annotation>
					<xs:documentation>The version of the compiler</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ModelProperty">
		<xs:annotation>
			<xs:documentation>(Was previously called ScientificProperty).  A ModelProperty is a parameter which is modeled by a component.  These properties may be coupled via a connection.  They may also be related to one other.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="dataProperty" type="DataProperty" minOccurs="0"/>
			<xs:element name="group" type="PropertyGroup"/>
			<xs:element name="id" type="UniqueIdentifier"/>
			<xs:element name="value" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="CodeList" use="required"/>
		<xs:attribute name="type" type="PropertyType" use="required"/>
	</xs:complexType>
	<xs:complexType name="DataProperty">
		<xs:annotation>
			<xs:documentation>This is used as an association class to link ModelProperties with information specific to the data package (Content, Extent, etc.).  A ModelProperty has a DataProperty when it is derived from a data file.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conformance" type="Conformance"/>
			<xs:element name="dataContent" type="DataContent"/>
			<xs:element name="dataExtent" type="DataExtent"/>
			<xs:element name="modelProperty" type="ModelProperty"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="OriginType">
		<xs:annotation>
			<xs:documentation>An enumeration describing the source of a ModelProperty.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="coupled">
				<xs:annotation>
					<xs:documentation>This property's value is set by another component; ie: it must be coupled.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="external">
				<xs:annotation>
					<xs:documentation>This property's value is set externally; ie: it comes from a file.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="internal">
				<xs:annotation>
					<xs:documentation>This property's value is set internally.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="Connection">
		<xs:annotation>
			<xs:documentation>A Connection represents a link from a source ModelProperty to a target ModelProperty.  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="coupling" type="Coupling"/>
			<xs:element name="rate" type="Timestep">
				<xs:annotation>
					<xs:documentation>All information having to do with the rate of this connection; the times that it is active.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="source" type="ModelProperty"/>
			<xs:element name="target" type="ModelProperty"/>
			<xs:element name="transformer" type="ProcessorComponent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="type" type="ConnectionType" use="required">
			<xs:annotation>
				<xs:documentation>The type of Connection</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="TransformerStatisticsType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="all_points"/>
			<xs:enumeration value="masked_points"/>
			<xs:enumeration value="notmasked_points"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SoftwareComponent">
		<xs:sequence>
			<xs:element name="child" type="SoftwareComponent" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="parent" type="SoftwareComponent" minOccurs="0"/>
			<xs:element name="composition" type="Coupling" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="deployment" type="DeploymentProperties"/>
			<xs:element name="scientificProperties" type="PropertyGroup" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="embedded" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>An embedded component cannot exist on its own as an atomic piece of software; instead it is embedded within another (parent) component.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" type="ComponentType" use="required">
			<xs:annotation>
				<xs:documentation>Describes the type of component (ie: transformer, atmosphere, ocean, etc.).  More precise descriptions are possible using a combination of the description, longName, and standardName attributes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DeploymentProperties">
		<xs:sequence>
			<xs:element name="component" type="SoftwareComponent"/>
			<xs:element name="compiler" type="Compiler"/>
			<xs:element name="machine" type="Machine"/>
			<xs:element name="parallelisation" type="Parallelisation"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="TransformerTimeOperation">
		<xs:restriction base="xs:string">
			<xs:enumeration value="accumulation"/>
			<xs:enumeration value="average"/>
			<xs:enumeration value="maximum"/>
			<xs:enumeration value="minimum"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ParallelisationType">
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="Machine">
		<xs:annotation>
			<xs:documentation>Information about the machine a component is deployed on.  Forms part of a component's TechnicalProperties.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="machineDescription" type="xs:string"/>
			<xs:element name="machineEnvironmentVariables" type="xs:string"/>
			<xs:element name="machineLibrary" type="xs:string"/>
			<xs:element name="machineName" type="xs:string">
				<xs:annotation>
					<xs:documentation>the name of the machine onto which this component is deployed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="machineSystem" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessorComponent">
		<xs:complexContent>
			<xs:extension base="SoftwareComponent">
				<xs:sequence>
					<xs:element name="dataProcessing" type="DataProcessing" minOccurs="0"/>
					<xs:element name="algebraicCombination" type="TransformerAlgebraicCombinationType"/>
					<xs:element name="localTransformation" type="TransformerLocalTransformationType"/>
					<xs:element name="regridding" type="TransformerRegriddingType"/>
					<xs:element name="timeOperation" type="TransformerTimeOperationType"/>
				</xs:sequence>
				<xs:attribute name="conservation" type="xs:boolean" use="required"/>
				<xs:attribute name="statistics" type="TransformerStatisticsType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="processorComponent" type="ProcessorComponent"/>
	<xs:complexType name="Coupling">
		<xs:annotation>
			<xs:documentation>A coupling represents a set of Connections between a source and target component.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="connection" type="Connection" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="component" type="SoftwareComponent"/>
			<xs:element name="description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>HERE IS A COMMENT!</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="rate" type="Timestep"/>
			<xs:element name="source" type="SoftwareComponent"/>
			<xs:element name="target" type="SoftwareComponent"/>
		</xs:sequence>
		<xs:attribute name="complete" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>If "true" then the coupling is fully-specified.  If "false" then not every Connection has been described within the coupling.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="couplingType" type="ConnectionType" use="optional"/>
	</xs:complexType>
	<xs:complexType name="ModelComponent">
		<xs:complexContent>
			<xs:extension base="SoftwareComponent">
				<xs:sequence>
					<xs:element name="simulationRun" type="SimulationRun" minOccurs="0"/>
					<xs:element name="timestep" type="Timestep">
						<xs:annotation>
							<xs:documentation>HERE IS A COMMENT</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="modelComponent" type="ModelComponent"/>
	<xs:complexType name="FileComponent">
		<xs:complexContent>
			<xs:extension base="SoftwareComponent">
				<xs:sequence>
					<xs:element name="fileName" type="xs:string"/>
					<xs:element name="filePath" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="fileComponent" type="FileComponent"/>
	<xs:simpleType name="ConnectionType">
		<xs:annotation>
			<xs:documentation>The ConnectionType enumeration describes the mechanism of transport for a connection.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="argument-passing">
				<xs:annotation>
					<xs:documentation>a "direct" connection; implies a sequential rather than parallel simulation.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="embedded"/>
			<xs:enumeration value="MPI"/>
			<xs:enumeration value="OASIS"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ComponentType">
		<xs:annotation>
			<xs:documentation>An enumeration of types of ModelComponent.  This includes things like atmosphere &amp; ocean models, radiation schemes, and transformers.  More detailed descriptions are to be found in a component's StandardName(s).  CIM best-practice is to describe every component for which there is a named ComponentType as a separate component, even if it is not a separate unit of software (ie: even if it is embedded), instead of as a (set of) ModelParameters.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="xs:string ComponentTypeEnumeration"/>
	</xs:simpleType>
	<xs:simpleType name="ComponentTypeEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="atmosphere"/>
			<xs:enumeration value="ocean"/>
			<xs:enumeration value="radiation"/>
			<xs:enumeration value="transformer"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="Parallelisation">
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="Timestep">
		<xs:sequence>
			<xs:element name="end" type="DateTime" minOccurs="0"/>
			<xs:element name="rate" type="xs:integer"/>
			<xs:element name="start" type="DateTime" minOccurs="0"/>
			<xs:element name="units" type="Timestep"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PropertyType">
		<xs:annotation>
			<xs:documentation>An enumeration of types of ModelComponent.  This includes things like atmosphere &amp; ocean models, radiation schemes, and transformers.  More detailed descriptions are to be found in a component's StandardName(s).  CIM best-practice is to describe every component for which there is a named ComponentType as a separate component, even if it is not a separate unit of software (ie: even if it is embedded), instead of as a (set of) ModelParameters.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="xs:string PropertyTypeEnumeration"/>
	</xs:simpleType>
	<xs:simpleType name="PropertyTypeEnumeration">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
</xs:schema>
