<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:cim="http://www.purl.org/org/esmetadata/cim/1.91/schemas" targetNamespace="http://www.purl.org/org/esmetadata/cim/1.91/schemas" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0"><!-- Schema auto-generated by FullMoon, applying rule suite xmi11ea -->
    <annotation>
        <documentation>A package containing classes relating to the simulation activity, compliant with observations and measurements, and project related classes.</documentation>
    </annotation>
    <import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/>
    <include schemaLocation="cimData.xsd"/>
    <include schemaLocation="cimProcess.xsd"/>
    <include schemaLocation="cimCommon.xsd"/>
    <element name="M4A_Project" substitutionGroup="cim:" type="cim:M4A_ProjectType">
        <annotation>
            <documentation>A climate project.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_ProjectType">
        <complexContent>
            <extension base="cim:Type">
                <sequence>
                    <element maxOccurs="unbounded" minOccurs="0" name="fundingSource" nillable="true" type="string">
                        <annotation>
                            <documentation>The entities that funded this activity.</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="unbounded" minOccurs="0" name="projectType" nillable="true" type="cim:M4A_ProjectTypeType">
                        <annotation>
                            <documentation>The project(s) that this activity is associated with (ie: CMIP5, AMIP, etc.)</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="unbounded" minOccurs="0" name="child" type="cim:M4A_ProjectPropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="procedure" type="cim:M4A_CompositeObservationPropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="parent" type="cim:M4A_ProjectPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ProjectPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Project"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_ObservationStation" substitutionGroup="gml:AbstractFeature" type="cim:M4A_ObservationStationType">
        <annotation>
            <documentation>Not sure where this fits.  O&amp;amp;M has a link to process, which may include a measurement instrument/sensor.  What is this observation station?  Is it a kind of sensor, or a location?</documentation>
        </annotation>
    </element>
    <complexType name="M4A_ObservationStationType">
        <complexContent>
            <extension base="gml:AbstractFeatureType">
                <sequence>
                    <element name="fixity" type="cim:M4A_FixityTypeType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ObservationStationPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_ObservationStation"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_Observation" substitutionGroup="om:OM_Observation" type="cim:M4A_ObservationType">
        <annotation>
            <documentation>A class created solely to apply constraints on the classes that may participate in standard O&amp;amp;M associations.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_ObservationType">
        <complexContent>
            <extension base="om:OM_ObservationType">
                <sequence>
                    <element name="procedure" type="cim:M4P_NumericalProcessPropertyType"/>
                    <element name="result" type="cim:M4D_DataAtomPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ObservationPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Observation"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_CompositeObservation" substitutionGroup="gml:AbstractFeature" type="cim:M4A_CompositeObservationType">
        <annotation>
            <documentation>An observation that may potentially have multiple results, each representing a different property and possibly a different feature type.  This is for complex mathematical observations like earth system simulations, that while they may simulate a given feature type, may have many different outputs.

A composite observation aggregates many different individual observations (OM_Observation).  The result of the individual observations are referenced by M4D_DataContent (which references one individual variable within a file), while the results from a composite observation are referenced by M4D_DataObject (which groups the individual results from the composite observation into a file).</documentation>
        </annotation>
    </element>
    <complexType name="M4A_CompositeObservationType">
        <complexContent>
            <extension base="gml:AbstractFeatureType">
                <sequence>
                    <element name="parameter" type="om:NamedValuePropertyType">
                        <annotation>
                            <documentation>Event-specific or environmental parameters, as per O&amp;amp;M.  That is, parameters that relate to the actual running of the simulation or other activity. A specialised set of Named Values has been created in M4A_NamedValue, but users may also use their own additional parameters.</documentation>
                        </annotation>
                    </element>
                    <element name="procedure" type="cim:M4P_NumericalProcessPropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="relatedCompositeObservation" type="cim:M4A_CompositeObservationPropertyType"/>
                    <element name="result" type="cim:M4D_DataCollectionPropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="1" name="includes" type="cim:M4A_ObservationPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_CompositeObservationPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_CompositeObservation"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_NumericalExperiment" substitutionGroup="gml:AbstractFeature" type="cim:M4A_NumericalExperimentType">
        <annotation>
            <documentation>A numerical experiment may be conducted as part of a MIP. Examples: AR4 individual experiments, AR5 individual experiments, RAPID THC experiments etc. 

The Experiment class from v1.5 grouped together various activities which are now catered for by the observations and procedures classes and their subclasses, as well as this, NumericalExperiment.  The different aspects of the experiment need to be separated out to fit O&amp;amp;M: the observation that is part of the experiment, the process that is used, and the experiment itself, being the reason for conducting the observation etc.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_NumericalExperimentType">
        <complexContent>
            <extension base="gml:AbstractFeatureType">
                <sequence>
                    <element name="shortName" type="string"/>
                    <element name="longName" type="string"/>
                    <element maxOccurs="1" minOccurs="0" name="description" nillable="true" type="string"/>
                    <element maxOccurs="1" minOccurs="0" name="experimentID" type="gmd:MD_Identifier_PropertyType"/>
                    <element name="timePeriod" type="gml:TimePeriodPropertyType">
                        <annotation>
                            <documentation>TM_Period allows for a start and end date to be specified. They can be indeterminate, and while the Julian calendar is the preference, it is also possible to reference a different temporal reference system.  The perpetual period and daily 360 calendars need to be defined as instances of TM_Calendar in order for them to be referred to as temporal reference systems for TM_Period by this attribute.</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="unbounded" minOccurs="1" name="numericalRequirement" type="cim:M4A_NumericalRequirementPropertyType"/>
                    <element name="documentMetadata" type="cim:M4C_DocumentMetadataPropertyType"/>
                    <element name="rationale" type="cim:M4A_ProjectPropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="target" type="cim:M4A_NumericalExperimentPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_NumericalExperimentPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_NumericalExperiment"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_CodeModification" substitutionGroup="gml:AbstractGML" type="cim:M4A_CodeModificationType">
        <annotation>
            <documentation>Normally used as a bug fix. This should be used when the code has been changed, but there is no consequential change to the descriptions.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_CodeModificationType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element maxOccurs="1" minOccurs="0" name="description" type="">
                        <annotation>
                            <documentation>This uses a datatype from SWE, SensorML - a new one could be defined.</documentation>
                        </annotation>
                    </element>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_CodeModificationPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_CodeModification"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_NumericalRequirement" substitutionGroup="gml:AbstractGML" type="cim:M4A_NumericalRequirementType">
        <annotation>
            <documentation>A description of the requirements of particular experiments.  Numerical Requirements can be initial conditions, boundary conditions, or physical modificiations.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_NumericalRequirementType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="name" type="string"/>
                    <element maxOccurs="1" minOccurs="0" name="description" type="string"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="childRequirement" type="cim:M4A_RequirementOptionPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_NumericalRequirementPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_NumericalRequirement"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_RuntimeChange" substitutionGroup="gml:AbstractGML" type="cim:M4A_RuntimeChangeType">
        <annotation>
            <documentation>These are used for making runtime modifications to a configured model.

Note that the common use of namelists to provide runtime configuration should be handled by describing the default namelist options in the configured model description, and the runtime specific changes using this method.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_RuntimeChangeType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="description" type="">
                        <annotation>
                            <documentation>This uses a datatype from SWE, SensorML - a new one could be defined.</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="unbounded" minOccurs="0" name="configChange" type="cim:M4A_ConfigurationChangePropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="codeModification" type="cim:M4A_CodeModificationPropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="valueModification" type="cim:M4A_ValueModificationPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_RuntimeChangePropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_RuntimeChange"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_OutputRequirement" substitutionGroup="cim:M4A_NumericalRequirement" type="cim:M4A_OutputRequirementType"/>
    <complexType name="M4A_OutputRequirementType">
        <complexContent>
            <extension base="cim:M4A_NumericalRequirementType">
                <sequence>
                    <element maxOccurs="1" minOccurs="0" name="outputFrequency" type="cim:M4C_TimeUnitTypeType"/>
                    <element maxOccurs="1" minOccurs="0" name="outputPeriod" type="gml:TimePeriodPropertyType"/>
                    <element maxOccurs="1" minOccurs="0" name="temporalAveraging" type="cim:M4A_TemporalAveTypeType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_OutputRequirementPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_OutputRequirement"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_Deployment" substitutionGroup="gml:AbstractGML" type="cim:M4A_DeploymentType">
        <annotation>
            <documentation>Gives information about the technical properties of a component: what machine it was run on, which compilers were used, how it was parallised, etc.

A deployment basically associates a deploymentDate with a Platform.  A deployment only exists if something has been deployed.  A platform, in contrast, can exist independently, waiting to be used in deployments.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_DeploymentType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element maxOccurs="1" minOccurs="0" name="deploymentDate" type="dateTime"/>
                    <element maxOccurs="1" minOccurs="0" name="description" type="string"/>
                    <element maxOccurs="unbounded" minOccurs="1" name="hasExecutable" type="cim:M4A_ExecutablePropertyType"/>
                    <element name="hasSchedule" type="cim:M4A_SchedulePropertyType"/>
                    <element name="isMediatedBy" type="cim:M4A_MediationPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_DeploymentPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Deployment"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_ConfigurationChange" substitutionGroup="gml:AbstractGML" type="cim:M4A_ConfigurationChangeType">
        <annotation>
            <documentation>The RuntimeChange type is used as a parameter to an observation, and includes changes that may occur to the configuration at run time.  The original configuration may be accessed through the description of the ObservationalProcess for the observation (procedure association).  This class contains the new configuration (after the change).  The new configuration should contain the entire configuration for the process used by the observation, not just the parts that have changed, to facilitate easy access by applications.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_ConfigurationChangeType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="newConfiguration" type="cim:M4P_ActualConfigurationPropertyType"/>
                    <element maxOccurs="1" minOccurs="0" name="description" type=""/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ConfigurationChangePropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_ConfigurationChange"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_Mediation" substitutionGroup="gml:AbstractGML" type="cim:M4A_MediationType"/>
    <complexType name="M4A_MediationType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="mediator" type="cim:M4P_ConnectionTypeType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_MediationPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Mediation"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_InitialCondition" substitutionGroup="cim:M4A_NumericalRequirement" type="cim:M4A_InitialConditionType">
        <annotation>
            <documentation>An initial condition is a numerical requirement on a model prognostic variable value at time zero.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_InitialConditionType">
        <complexContent>
            <extension base="cim:M4A_NumericalRequirementType">
                <sequence>
                    <element name="source" type="cim:M4P_PropertyPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_InitialConditionPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_InitialCondition"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_Conformance" substitutionGroup="gml:AbstractGML" type="cim:M4A_ConformanceType">
        <annotation>
            <documentation>A conformance class maps how a configured model component met a specific numerical requirement.

For example, for a double CO2 boundary condition, a model component might read a CO2 dataset in which CO2 has been doubled, or it might modify a parameterisation (presumably with a factor of two somewhere).
So, the conformance links a requirement to a DataSource (which can be either an actual DataObject or a property of a model component).
In some cases a model/simulation may _naturally_ conform to a requirement. In this case there would be no reference to a DataSource but the conformant attribute would be true.

If something is purpopsefully non-conformant then the conformant attribute would be false.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_ConformanceType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="conformant" type="boolean">
                        <annotation>
                            <documentation>Records whether or not this conformance satisfies the requirement.  A simulation should have at least one conformance mapping to every experimental requirement.  If a simulation satisfies the requirement - the usual case - then conformant should have a value of "true."  If conformant is true but there is no reference to a source for the conformance, then we can assume that the simulation conforms to the requirement _naturally_, that is without having to modify code or inputs. If a simulation does not conform to a requirement then conformant should be set to "false."</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="1" minOccurs="0" name="description" type="string"/>
                    <element maxOccurs="1" minOccurs="0" name="frequency" type="cim:M4C_TimeUnitTypeType"/>
                    <element maxOccurs="unbounded" minOccurs="1" name="requirement" type="cim:M4A_NumericalRequirementPropertyType">
                        <annotation>
                            <documentation>Points to the NumericalRequirement that the simulation in question is conforming to.</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="1" minOccurs="0" name="type" type="cim:M4A_ConformanceTypeType">
                        <annotation>
                            <documentation>Describes the method that this simulation conforms to an experimental requirement (in case it is not specified by the change property of the reference to the source of this conformance)</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="1" minOccurs="0" name="source" type=""/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ConformancePropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Conformance"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_RequirementOption" substitutionGroup="gml:AbstractGML" type="cim:M4A_RequirementOptionType">
        <annotation>
            <documentation>A NumericalRequirement that is being used as a set of related requirements; For example if a requirement is to use 1 of 3 boundary conditions, then that "parent" requirement would have three "child" RequirementOptions (each of one with the XOR optionRelationship).</documentation>
        </annotation>
    </element>
    <complexType name="M4A_RequirementOptionType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element maxOccurs="1" minOccurs="0" name="requirement" type="cim:M4A_NumericalRequirementPropertyType">
                        <annotation>
                            <documentation>The requirement being specified by this option</documentation>
                        </annotation>
                    </element>
                    <element name="optionRelationship" type="cim:M4C_LogicalChoiceTypeType">
                        <annotation>
                            <documentation>Describes how this optional (child) requirement is related to its sibling requirements.  For example, a NumericalRequirement could consist of a set of optional requirements each with an "OR" relationship meaning use this boundary condition _or_ that one.</documentation>
                        </annotation>
                    </element>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_RequirementOptionPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_RequirementOption"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_SpatioTemporalConstraint" substitutionGroup="cim:M4A_NumericalRequirement" type="cim:M4A_SpatioTemporalConstraintType"/>
    <complexType name="M4A_SpatioTemporalConstraintType">
        <complexContent>
            <extension base="cim:M4A_NumericalRequirementType">
                <sequence>
                    <element maxOccurs="1" minOccurs="0" name="requiredDuration" type="gml:TimePeriodPropertyType"/>
                    <element maxOccurs="1" minOccurs="0" name="spatialResolution" type="cim:M4A_ResolutionTypeType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_SpatioTemporalConstraintPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_SpatioTemporalConstraint"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_BoundaryCondition" substitutionGroup="cim:M4A_NumericalRequirement" type="cim:M4A_BoundaryConditionType">
        <annotation>
            <documentation>A boundary condition is a numerical requirement which looks like a variable imposed on the model evolution (i.e. it might - or might not - evolve with time, but is seen by the model at various times during its evolution) as opposed to an initial condition (at model time zero).</documentation>
        </annotation>
    </element>
    <complexType name="M4A_BoundaryConditionType">
        <complexContent>
            <extension base="cim:M4A_NumericalRequirementType">
                <sequence>
                    <element name="source" type="cim:M4P_PropertyPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_BoundaryConditionPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_BoundaryCondition"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_Schedule" substitutionGroup="gml:AbstractGML" type="cim:M4A_ScheduleType"/>
    <complexType name="M4A_ScheduleType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="scheduleDetails" type="string"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_SchedulePropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Schedule"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_Executable" substitutionGroup="gml:AbstractGML" type="cim:M4A_ExecutableType"/>
    <complexType name="M4A_ExecutableType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="name" type="string"/>
                    <element name="arguements" type="string"/>
                    <element maxOccurs="unbounded" minOccurs="1" name="hasProcessSet" type="cim:M4A_ProcessSetPropertyType"/>
                    <element name="ranOn" type="cim:M4C_MachinePropertyType"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="linkedTo" type="cim:M4C_LibraryPropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ExecutablePropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_Executable"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_ValueModification" substitutionGroup="gml:AbstractGML" type="cim:M4A_ValueModificationType">
        <annotation>
            <documentation>These modifications are applied directly to the code, and are not able to be reflected in a configuration change (the variable is not described in any of the available descriptions).</documentation>
        </annotation>
    </element>
    <complexType name="M4A_ValueModificationType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element maxOccurs="1" minOccurs="0" name="description" type="">
                        <annotation>
                            <documentation>This uses a datatype from SWE, SensorML - a new one could be defined.</documentation>
                        </annotation>
                    </element>
                    <element maxOccurs="unbounded" minOccurs="1" name="parameter" type="om:NamedValuePropertyType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ValueModificationPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_ValueModification"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_CompositeObservationContext" substitutionGroup="om:ObservationContext" type="cim:M4A_CompositeObservationContextType"/>
    <complexType name="M4A_CompositeObservationContextType">
        <complexContent>
            <extension base="om:ObservationContextType">
                <sequence>
                    <element name="role" type="cim:M4A_ContextRoleTypeType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_CompositeObservationContextPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_CompositeObservationContext"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_ExperimentRelationship" substitutionGroup="gml:AbstractGML" type="cim:M4A_ExperimentRelationshipType"/>
    <complexType name="M4A_ExperimentRelationshipType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="relationshipType" type="cim:M4A_ExperimentRelationshipTypeType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ExperimentRelationshipPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_ExperimentRelationship"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_ProcessSet" substitutionGroup="gml:AbstractGML" type="cim:M4A_ProcessSetType"/>
    <complexType name="M4A_ProcessSetType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="processes" type="integer"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="M4A_ProcessSetPropertyType">
        <sequence minOccurs="0">
            <element ref="cim:M4A_ProcessSet"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <element name="M4A_NamedValue" substitutionGroup="om:NamedValue" type="cim:M4A_NamedValueType">
        <annotation>
            <documentation>A specialisation of the Observations and Measurements NamedValue class that is specific to Metafor.  It contains a constraint on the parameters that may be used. M4A_CompositeValue.parameter is of type NamedValue, to allow a wider range of parameters to be supplied, but M4A_NamedValue can be used to describe Metafor specific parameters.</documentation>
        </annotation>
    </element>
    <complexType name="M4A_NamedValueType">
        <complexContent>
            <extension base="om:NamedValueType"/>
        </complexContent>
    </complexType>
    <complexType name="M4A_NamedValuePropertyType">
        <sequence>
            <element ref="cim:M4A_NamedValue"/>
        </sequence>
        <attributeGroup ref="gml:OwnershipAttributeGroup"/>
    </complexType>
    <simpleType name="M4A_FixityTypeType">
        <restriction base="string">
            <enumeration value="moving"/>
            <enumeration value="stationary"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ConformanceTypeType">
        <restriction base="string">
            <enumeration value="standard config">
                <annotation>
                    <documentation>Describes a simulation that is "naturally" conformant to an experimental requirement.
</documentation>
                </annotation>
            </enumeration>
            <enumeration value="not conformant">
                <annotation>
                    <documentation>Describes a simulation that is purpefully non-conformant to an experimental requirement.
</documentation>
                </annotation>
            </enumeration>
            <enumeration value="via inputs">
                <annotation>
                    <documentation>Describes a simulation that conforms to an experimental requirement by using particular inputs.
</documentation>
                </annotation>
            </enumeration>
            <enumeration value="via model mods">
                <annotation>
                    <documentation>Describes a simulation that conforms to an experimental requirement by changing the configuration of the software model implementing that simulation.
</documentation>
                </annotation>
            </enumeration>
            <enumeration value="combination">
                <annotation>
                    <documentation>Describes a simulation that conforms to an experimental requirement by using more than one method.
</documentation>
                </annotation>
            </enumeration>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ExperimentRelationshipTypeType">
        <restriction base="string">
            <enumeration value="continuationOf"/>
            <enumeration value="previousRealisation"/>
            <enumeration value="controlExperiment"/>
            <enumeration value="higherResolutionVersionOf"/>
            <enumeration value="lowerResolutionVersionOf"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ProjectTypeType">
        <union memberTypes="cim:M4A_ProjectTypeEnumerationType cim:M4A_ProjectTypeOtherType"/>
    </simpleType>
    <simpleType name="M4A_ProjectTypeEnumerationType">
        <restriction base="string">
            <enumeration value="AMIP"/>
            <enumeration value="CMIP5"/>
            <enumeration value="TAMIP"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ProjectTypeOtherType">
        <restriction base="string">
            <pattern value="other: \w{2,}"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ResolutionTypeType">
        <union memberTypes="cim:M4A_ResolutionTypeEnumerationType cim:M4A_ResolutionTypeOtherType"/>
    </simpleType>
    <simpleType name="M4A_ResolutionTypeEnumerationType">
        <restriction base="string"/>
    </simpleType>
    <simpleType name="M4A_ResolutionTypeOtherType">
        <restriction base="string">
            <pattern value="other: \w{2,}"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ContextRoleTypeType">
        <union memberTypes="cim:M4A_ContextRoleTypeEnumerationType cim:M4A_ContextRoleTypeOtherType"/>
    </simpleType>
    <simpleType name="M4A_ContextRoleTypeEnumerationType">
        <restriction base="string">
            <enumeration value="spinupSimulation"/>
            <enumeration value="followingSimulation"/>
            <enumeration value="ensembleMember"/>
            <enumeration value="simulationCompositeMember"/>
            <enumeration value="extensionSimulation"/>
            <enumeration value="responseSimulation"/>
            <enumeration value="continuationSimulation"/>
            <enumeration value="previousSimulation"/>
            <enumeration value="higherResolutionVersionSimulation"/>
            <enumeration value="lowerResolutionVersionSimulation"/>
            <enumeration value="fixedSimulation"/>
            <enumeration value="exploitedDataCollection"/>
            <enumeration value="controlSimulation"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ContextRoleTypeOtherType">
        <restriction base="string">
            <pattern value="other: \w{2,}"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_TemporalAveTypeType">
        <union memberTypes="cim:M4A_TemporalAveTypeEnumerationType cim:M4A_TemporalAveTypeOtherType"/>
    </simpleType>
    <simpleType name="M4A_TemporalAveTypeEnumerationType">
        <restriction base="string"/>
    </simpleType>
    <simpleType name="M4A_TemporalAveTypeOtherType">
        <restriction base="string">
            <pattern value="other: \w{2,}"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ObservationTypeType">
        <union memberTypes="cim:M4A_ObservationTypeEnumerationType cim:M4A_ObservationTypeOtherType"/>
    </simpleType>
    <simpleType name="M4A_ObservationTypeEnumerationType">
        <restriction base="string">
            <enumeration value="ensemble - experiment driven"/>
            <enumeration value="ensemble - cross model"/>
            <enumeration value="ensemble - initial condition"/>
            <enumeration value="ensemble - mixed"/>
            <enumeration value="ensemble - model modification"/>
            <enumeration value="ensemble - perturbed boundary"/>
            <enumeration value="ensemble - perturbed physics"/>
            <enumeration value="ensemble - staggered start"/>
            <enumeration value="simulation"/>
            <enumeration value="assimilation"/>
            <enumeration value="simulationComposite"/>
        </restriction>
    </simpleType>
    <simpleType name="M4A_ObservationTypeOtherType">
        <restriction base="string">
            <pattern value="other: \w{2,}"/>
        </restriction>
    </simpleType>
</schema>